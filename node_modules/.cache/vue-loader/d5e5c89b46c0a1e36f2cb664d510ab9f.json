{"remainingRequest":"/Users/nashad/Documents/doc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nashad/Documents/doc/src/views/doc.vue?vue&type=style&index=0&id=7b82f416&scoped=true&lang=css&","dependencies":[{"path":"/Users/nashad/Documents/doc/src/views/doc.vue","mtime":1553652635000},{"path":"/Users/nashad/Documents/doc/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/nashad/Documents/doc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nashad/Documents/doc/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nashad/Documents/doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nashad/Documents/doc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#input-area:focused {\n    border-color: initial !important;\n}\n\n#input-area {\n    outline: none;\n    padding: 20px;\n    width: 100%;\n    font-size: 15px;\n    min-height: calc(100vh - 80px);\n    resize: none;\n    overflow: hidden;\n}\n\n#link-share {\n    width: 100%;\n}\n\n#link-share button {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n}\n\n#link-share input {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n}\n",{"version":3,"sources":["doc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"doc.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <main class=\"document\">\n        <section class=\"row document-page\" style=\"padding: 10px 0;\">\n            <div class=\"col-md-2\">\n                <a class=\"btn btn-link\" @click=\"toggleDashboard\"\n                    style=\"padding: 0; color: #007bff;\">\n                    <i class=\"fa fa-angle-left\"></i> Return to dashboard\n                </a>\n            </div>\n            <div class=\"col-md-8\">\n                <textarea id=\"input-area\" v-on:focus=\"documentFocused\"\n                    v-on:blur=\"documentBlurred\" v-on:keyup=\"processContent\" class=\"card\"\n                    placeholder=\"Start typing here...\" v-bind:height=\"inputHeight\"\n                    ></textarea>\n            </div>\n            <div class=\"col-md-2\">\n                <div>\n                    <span class=\"badge badge-light hide\" id=\"saving-indicator\">\n                        Saving...\n                    </span>\n                </div>\n                \n                <div id=\"link-share\">\n                    <input type=\"text\" disabled v-bind:value=\"docID\"\n                        class=\"form-control\" id=\"link-text\">\n                    <div>\n                        <button class=\"btn btn-primary btn-block\" @click=\"copyLink\">\n                            share link\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </main>\n</template>\n\n<script>\n    export default {\n        name: 'doc',\n        data() {\n            return {};\n        },\n        props: {\n            docID: String\n        },\n        mounted: function () {\n            firestore.collection(\"pages\").doc(this.docID)\n            .onSnapshot(function(doc) {\n                document.querySelector('#input-area')\n                .value = doc.data().content;\n            });\n        },\n        methods: {\n            // Go to Dashboard\n            toggleDashboard: function () {\n                window.location.reload('/');\n            },\n            doc: function () {\n                return document.querySelector('#input-area');\n            },\n            \n            savingIndicator: function () {\n                return document.querySelector('#saving-indicator');\n            },\n            \n            // Copy Document Link\n            copyLink: function () {\n                let copyText = document.querySelector(\"#link-text\");\n                copyText.select();\n                document.execCommand(\"copy\");\n                \n                /* Alert the copied text */\n                alert(\"Link copied!\");\n            },\n            \n            // Focus document\n            documentFocused: function () {\n                this.doc().classList.toggle('document-focused');\n            },\n            \n            // Blur document\n            documentBlurred: function () {\n                this.doc().classList.toggle('document-focused');\n            },\n            \n            // Retrieve height of textarea\n            inputHeight: function (height=null) {\n                return height || this.doc().offsetHeight;\n            },\n            \n            // Auto expand/contract textarea based on document content\n            expandInput: function () {\n                let height = this.inputHeight();\n                let charCount = this.doc().value.length;\n                \n                //  Arbitrary number (2350) for now\n                if (charCount > 2350) {\n                    this.doc().style.height = (height + (height * 0.05)).toString() + 'px';\n                } else {\n                    this.doc().style.height = 'initial';\n                }\n            },\n            \n            // Save to Firebase\n            addToFirebase: function () {\n                firestore.collection('pages').doc(this.docID).set({\n                    content: this.doc().value\n                }, {merge: true}).then(function(docRef) {\n                    if (docRef) {\n                        // will do something here\n                    }\n                    \n                    let ind = document.querySelector('#saving-indicator');\n                    ind.innerHTML = 'saved!';\n                    \n                    setTimeout( function () {\n                        ind.classList.add('hide');\n                        ind.innerHTML = 'saving...';\n                    }, 3000 );\n                })\n            },\n            \n            processContent: function () {\n                this.savingIndicator().innerHTML = 'saving...';\n                this.savingIndicator().classList.remove('hide');\n                this.addToFirebase();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #input-area:focused {\n        border-color: initial !important;\n    }\n    \n    #input-area {\n        outline: none;\n        padding: 20px;\n        width: 100%;\n        font-size: 15px;\n        min-height: calc(100vh - 80px);\n        resize: none;\n        overflow: hidden;\n    }\n    \n    #link-share {\n        width: 100%;\n    }\n    \n    #link-share button {\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n    }\n    \n    #link-share input {\n        border-bottom-left-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n</style>"]}]}